-- QUESTIONS ARE SOLVED USING POSTGRESQL

1. Given a table of candidates and their skills, you're tasked with finding the candidates best suited for an open Data Science job. You want to find candidates 
who are proficient in Python, Tableau, and PostgreSQL.
Write a query to list the candidates who possess all of the required skills for the job. Sort the output by candidate ID in ascending order.

-- SQL SOLUTION
select candidate_id from candidates
where skill in ('Python', 'Tableau', 'PostgreSQL')
group by candidate_id
having count(skill) = 3

2. PAGES WITH NO LIKES

-- SQL SOLUTION
SELECT p.page_id FROM pages p
LEFT JOIN page_likes l ON p.page_id = l.page_id
WHERE l.liked_date IS NULL
ORDER BY p.page_id;

3. Tesla is investigating production bottlenecks and they need your help to extract the relevant data. 
Write a query to determine which parts have begun the assembly process but are not yet finished.

-- SQL SOLUTION
SELECT part, assembly_step FROM parts_assembly
WHERE finish_date IS NULL;

4. Assume you're given the table on user viewership categorised by device type where the three types are laptop, tablet, and phone.
Write a query that calculates the total viewership for laptops and mobile devices where mobile is defined as the sum of tablet and phone viewership. 
Output the total viewership for laptops as laptop_reviews and the total viewership for mobile devices as mobile_views.

-- SQL SOLUTION
SELECT 
  SUM(CASE WHEN device_type = "laptop" THEN 1
      ELSE 0 
      END) AS laptop_views,
  SUM(CASE WHEN device_type in ("tablet","phone") THEN 1 
      ELSE 0
      END) AS mobile_views
FROM viewership;

5. Given a table of Facebook posts, for each user who posted at least twice in 2021, write a query to find the number of days between each userâ€™s 
first post of the year and last post of the year in the year 2021. Output the user and the number of days between each user's first and last post.

-- SQL SOLUTION
SELECT 
    user_id,
    MAX(post_date::DATE) - MIN(post_date::DATE) AS days_between
FROM posts
WHERE EXTRACT(YEAR FROM post_date) = 2021
GROUP BY user_id
HAVING COUNT(post_id) > 1 ;

6. Write a query to identify the top 2 Power Users who sent the highest number of messages on Microsoft Teams in August 2022. Display the IDs of these 2 users 
along with the total number of messages they sent. Output the results in descending order based on the count of the messages.

-- SQL SOLUTION
SELECT sender_id, count(message_id) AS message_count FROM messages
WHERE EXTRACT(YEAR FROM sent_date) = 2022 and EXTRACT(MONTH FROM sent_date) = 8
GROUP BY sender_id
ORDER BY message_count DESC
LIMIT 2;

7. Assume you're given a table containing job postings from various companies on the LinkedIn platform. Write a query to retrieve the count of companies that have posted 
duplicate job listings.

-- SQL SOLUTION
WITH job_count AS (
  SELECT company_id, title, description, count(job_id) AS jobs
  FROM job_listings
  GROUP BY company_id, title, description
)

SELECT company_id FROM job_count
WHERE jobs > 1;

8. Assume you're given the tables containing completed trade orders and user details in a Robinhood trading system. Write a query to retrieve the top three cities 
that have the highest number of completed trade orders listed in descending order. Output the city name and the corresponding number of completed trade orders.

-- SQL SOLUTION
SELECT city, count(order_id) AS completed_trades
FROM trades t join users u on t.user_id = u.user_id
WHERE status = 'Completed'
GROUP BY city
ORDER BY completed_trades DESC
LIMIT 3;

9. Given the reviews table, write a query to retrieve the average star rating for each product, grouped by month. The output should display the month as a numerical value, product ID, 
and average star rating rounded to two decimal places. Sort the output first by month and then by product ID.

-- SQL SOLUTION
SELECT 
  EXTRACT( MONTH FROM submit_date) AS month, 
  product_id, 
  round(avg(stars),2) FROM reviews
GROUP BY product_id, month
ORDER BY month, product_id;

10. Companies often perform salary analyses to ensure fair compensation practices. One useful analysis is to check if there are any employees earning more than their direct managers.
As an HR Analyst, you're asked to identify all employees who earn more than their direct managers. The result should include the employee's ID and name.

-- SQL SOLUTION
SELECT e1.employee_id, e1.name
FROM employee e1 join employee e2 on e2.employee_id = e1.manager_id
where e1.salary > e2.salary;

11. Given a table containing information about bank deposits and withdrawals made using Paypal, write a query to retrieve the final account balance for each account,
taking into account all the transactions recorded in the table with the assumption that there are no missing transactions.

-- SQL SOLUTION
SELECT 
  account_id, 
  SUM(CASE WHEN transaction_type = 'Deposit' THEN +amount
    ELSE -amount
    END) AS final_balance
FROM transactions
GROUP BY account_id;

12. Intuit provides a range of tax filing products, including TurboTax and QuickBooks, available in various versions.
Write a query to determine the total number of tax filings made using TurboTax and QuickBooks. Each user can file taxes once a year using only one product.

-- SQL SOLUTION
SELECT 
  COUNT(CASE WHEN (product LIKE 'TurboTax%') THEN filing_id END) AS turbotax_total,  
  COUNT(CASE WHEN (product LIKE 'QuickBooks%') THEN filing_id END) AS quickbooks_total
FROM filed_taxes;

13. Assume you have an events table on Facebook app analytics. Write a query to calculate the click-through rate (CTR) for the app in 2022 and round the results to 2 decimal places.

-- SQL SOLUTION
SELECT
  app_id,
  ROUND(100.0 *
    SUM(CASE WHEN event_type = 'click' THEN 1 ELSE 0 END) /
    SUM(CASE WHEN event_type = 'impression' THEN 1 ELSE 0 END), 2)  AS CTR_PERC
FROM events
WHERE EXTRACT(YEAR FROM timestamp) = 2022
GROUP BY app_id;

14. Assume you're given tables with information about TikTok user sign-ups and confirmations through email and text. New users on TikTok sign up using their email addresses, 
and upon sign-up, each user receives a text message confirmation to activate their account. Write a query to display the user IDs of those who did not confirm their sign-up 
on the first day, but confirmed on the second day.

-- SQL SOLUTION
SELECT e.user_id
FROM emails e JOIN texts t ON e.email_id = t.email_id
WHERE action_date =  signup_date + INTERVAL '1 day' 
  and signup_action = 'Confirmed'

15. IBM is analyzing how their employees are utilizing the Db2 database by tracking the SQL queries executed by their employees. The objective is to generate data 
to populate a histogram that shows the number of unique queries run by employees during the third quarter of 2023 (July to September). Additionally, it should count 
the number of employees who did not run any queries during this period. (IMPORTANT)
Display the number of unique queries as histogram categories, along with the count of employees who executed that number of unique queries.

-- SQL SOLUTION
WITH unique_qe AS (
SELECT 
  e.employee_id,
  COALESCE(COUNT(DISTINCT(q.query_id)),0) AS unique_no_queries
FROM queries q RIGHT JOIN employees e ON e.employee_id = q.employee_id
  AND query_starttime >= '2023-07-01T00:00:00Z' 
  AND query_starttime < '2023-10-01T00:00:00Z'
GROUP BY e.employee_id)

SELECT unique_no_queries, COUNT(DISTINCT(employee_id)) AS no_employees
FROM unique_qe
GROUP BY unique_no_queries

16. Your team at JPMorgan Chase is preparing to launch a new credit card, and to gain some insights, you're analyzing how many credit cards were issued each month.
Write a query that outputs the name of each credit card and the difference in the number of issued cards between the month with the highest issuance cards and the lowest issuance. Arrange the results based on the largest disparity.

-- SQL SOLUTION


17. Data was input incorrectly into the database. The ID was combined with the First Name. Write a query to separate the ID and First Name into two separate columns. Each ID is 5 characters long.

-- SQL SOLUTION
SELECT 
  SUBSTRING(id,1,5) as id, 
  SUBSTRING(id,6) as name 
FROM bad_data

18. Write a query to determine how many direct reports each Manager has. Report the Manager ID, Manager Title, and the number of direct reports in your output.
Note: Managers will have "Manager" in their title.

-- SQL SOLUTION
SELECT 
    m.employee_id,
    m.position,
    COUNT(DISTINCT(e.employee_id)) as direct_employee
FROM direct_reports e
JOIN direct_reports m ON e.managers_id = m.employee_id
WHERE m.position LIKE '%Manager%'
GROUP BY m.employee_id, m.position
